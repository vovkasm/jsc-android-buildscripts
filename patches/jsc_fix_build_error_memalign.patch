diff -aurN download/webkit/Source/bmalloc/CMakeLists.txt target/webkit/Source/bmalloc/CMakeLists.txt
--- download/webkit/Source/bmalloc/CMakeLists.txt	2020-06-02 22:43:17.000000000 +0300
+++ target/webkit/Source/bmalloc/CMakeLists.txt	2020-11-08 03:47:43.000000000 +0300
@@ -33,6 +33,7 @@
     bmalloc/PerProcess.cpp
     bmalloc/Scavenger.cpp
     bmalloc/bmalloc.cpp
+    bmalloc/posix_memalign.cpp
 )
 
 set(bmalloc_PUBLIC_HEADERS
diff -aurN download/webkit/Source/bmalloc/bmalloc/posix_memalign.cpp target/webkit/Source/bmalloc/bmalloc/posix_memalign.cpp
--- download/webkit/Source/bmalloc/bmalloc/posix_memalign.cpp	1970-01-01 03:00:00.000000000 +0300
+++ target/webkit/Source/bmalloc/bmalloc/posix_memalign.cpp	2020-11-08 03:46:52.000000000 +0300
@@ -0,0 +1,23 @@
+#if defined(__ANDROID__) && __ANDROID_API__ < 17
+//
+// Implementation borrowed from the Android Support Library
+// https://android.googlesource.com/platform/ndk/+/c066f37aeadeb8a8b21468ad8c82f4469fb5a70d/sources/android/support/src/posix_memalign.cpp
+//
+#include <errno.h>
+#include <malloc.h>
+#include <stdlib.h>
+
+int posix_memalign(void** memptr, size_t alignment, size_t size) {
+  if ((alignment & (alignment - 1)) != 0 || alignment == 0) {
+    return EINVAL;
+  }
+  if (alignment % sizeof(void*) != 0) {
+    return EINVAL;
+  }
+  *memptr = memalign(alignment, size);
+  if (*memptr == NULL) {
+    return errno;
+  }
+  return 0;
+}
+#endif
